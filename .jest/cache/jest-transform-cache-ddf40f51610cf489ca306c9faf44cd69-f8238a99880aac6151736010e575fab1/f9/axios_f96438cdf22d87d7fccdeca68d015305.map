{"version":3,"sources":["axios.js"],"names":["utils","require","bind","Axios","mergeConfig","defaults","createInstance","defaultConfig","context","instance","prototype","request","extend","create","instanceConfig","axios","Cancel","CancelToken","isCancel","VERSION","version","all","promises","Promise","spread","isAxiosError","module","exports","default"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,WAAnB;;AACA,IAAIC,IAAI,GAAGD,OAAO,kBAAlB;;AACA,IAAIE,KAAK,GAAGF,OAAO,gBAAnB;;AACA,IAAIG,WAAW,GAAGH,OAAO,sBAAzB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,cAAtB;;AAQA,SAASK,cAAT,CAAwBC,aAAxB,EAAuC;AACrC,MAAIC,OAAO,GAAG,IAAIL,KAAJ,CAAUI,aAAV,CAAd;AACA,MAAIE,QAAQ,GAAGP,IAAI,CAACC,KAAK,CAACO,SAAN,CAAgBC,OAAjB,EAA0BH,OAA1B,CAAnB;AAGAR,EAAAA,KAAK,CAACY,MAAN,CAAaH,QAAb,EAAuBN,KAAK,CAACO,SAA7B,EAAwCF,OAAxC;AAGAR,EAAAA,KAAK,CAACY,MAAN,CAAaH,QAAb,EAAuBD,OAAvB;;AAGAC,EAAAA,QAAQ,CAACI,MAAT,GAAkB,SAASA,MAAT,CAAgBC,cAAhB,EAAgC;AAChD,WAAOR,cAAc,CAACF,WAAW,CAACG,aAAD,EAAgBO,cAAhB,CAAZ,CAArB;AACD,GAFD;;AAIA,SAAOL,QAAP;AACD;;AAGD,IAAIM,KAAK,GAAGT,cAAc,CAACD,QAAD,CAA1B;AAGAU,KAAK,CAACZ,KAAN,GAAcA,KAAd;AAGAY,KAAK,CAACC,MAAN,GAAef,OAAO,mBAAtB;AACAc,KAAK,CAACE,WAAN,GAAoBhB,OAAO,wBAA3B;AACAc,KAAK,CAACG,QAAN,GAAiBjB,OAAO,qBAAxB;AACAc,KAAK,CAACI,OAAN,GAAgBlB,OAAO,cAAP,CAAsBmB,OAAtC;;AAGAL,KAAK,CAACM,GAAN,GAAY,SAASA,GAAT,CAAaC,QAAb,EAAuB;AACjC,SAAOC,OAAO,CAACF,GAAR,CAAYC,QAAZ,CAAP;AACD,CAFD;;AAGAP,KAAK,CAACS,MAAN,GAAevB,OAAO,oBAAtB;AAGAc,KAAK,CAACU,YAAN,GAAqBxB,OAAO,0BAA5B;AAEAyB,MAAM,CAACC,OAAP,GAAiBZ,KAAjB;AAGAW,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBb,KAAzB","sourcesContent":["'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n"]}