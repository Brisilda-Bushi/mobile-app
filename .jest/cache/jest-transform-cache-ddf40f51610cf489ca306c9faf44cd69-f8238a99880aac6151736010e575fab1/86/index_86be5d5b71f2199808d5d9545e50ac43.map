{"version":3,"sources":["index.js"],"names":["url","require","URL","http","https","Writable","assert","debug","events","eventHandlers","Object","create","forEach","event","arg1","arg2","arg3","_redirectable","emit","RedirectionError","createErrorType","TooManyRedirectsError","MaxBodyLengthExceededError","WriteAfterEndError","RedirectableRequest","options","responseCallback","call","_sanitizeOptions","_options","_ended","_ending","_redirectCount","_redirects","_requestBodyLength","_requestBodyBuffers","on","self","_onNativeResponse","response","_processResponse","_performRequest","prototype","abort","abortRequest","_currentRequest","write","data","encoding","callback","TypeError","length","maxBodyLength","push","end","currentRequest","setHeader","name","value","headers","removeHeader","setTimeout","msecs","destroyOnTimeout","socket","removeListener","destroy","addListener","startTimer","_timeout","clearTimeout","clearTimer","once","method","a","b","property","defineProperty","get","host","hostname","pathname","path","searchPos","indexOf","substring","search","protocol","nativeProtocol","nativeProtocols","agents","scheme","substr","agent","request","_currentUrl","format","e","_isRedirect","i","buffers","writeNext","error","buffer","finished","statusCode","trackRedirects","location","followRedirects","maxRedirects","test","removeMatchingHeaders","currentHostHeader","currentUrlParts","parse","currentHost","currentUrl","redirectUrl","resolve","cause","redirectUrlParts","isSubdomainOf","beforeRedirect","responseDetails","err","responseUrl","redirects","wrap","protocols","exports","keys","wrappedProtocol","input","urlStr","urlToOptions","equal","wrappedRequest","defineProperties","configurable","enumerable","writable","noop","urlObject","startsWith","slice","hash","href","port","Number","regex","lastValue","header","undefined","String","trim","code","defaultMessage","CustomError","Error","captureStackTrace","constructor","message","subdomain","domain","dot","endsWith","module"],"mappings":"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","sourcesContent":["var url = require(\"url\");\nvar URL = url.URL;\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar Writable = require(\"stream\").Writable;\nvar assert = require(\"assert\");\nvar debug = require(\"./debug\");\n\n// Create handlers that pass events from native requests\nvar events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\nvar eventHandlers = Object.create(null);\nevents.forEach(function (event) {\n  eventHandlers[event] = function (arg1, arg2, arg3) {\n    this._redirectable.emit(event, arg1, arg2, arg3);\n  };\n});\n\n// Error types with codes\nvar RedirectionError = createErrorType(\n  \"ERR_FR_REDIRECTION_FAILURE\",\n  \"Redirected request failed\"\n);\nvar TooManyRedirectsError = createErrorType(\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\n  \"Maximum number of redirects exceeded\"\n);\nvar MaxBodyLengthExceededError = createErrorType(\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n  \"Request body larger than maxBodyLength limit\"\n);\nvar WriteAfterEndError = createErrorType(\n  \"ERR_STREAM_WRITE_AFTER_END\",\n  \"write after end\"\n);\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  this._sanitizeOptions(options);\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\nRedirectableRequest.prototype.abort = function () {\n  abortRequest(this._currentRequest);\n  this.emit(\"abort\");\n};\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new WriteAfterEndError();\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new MaxBodyLengthExceededError());\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (typeof data === \"function\") {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  var self = this;\n\n  // Destroys the socket on timeout\n  function destroyOnTimeout(socket) {\n    socket.setTimeout(msecs);\n    socket.removeListener(\"timeout\", socket.destroy);\n    socket.addListener(\"timeout\", socket.destroy);\n  }\n\n  // Sets up a timer to trigger a timeout event\n  function startTimer(socket) {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n    }\n    self._timeout = setTimeout(function () {\n      self.emit(\"timeout\");\n      clearTimer();\n    }, msecs);\n    destroyOnTimeout(socket);\n  }\n\n  // Stops a timeout from triggering\n  function clearTimer() {\n    // Clear the timeout\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n      self._timeout = null;\n    }\n\n    // Clean up all attached listeners\n    self.removeListener(\"abort\", clearTimer);\n    self.removeListener(\"error\", clearTimer);\n    self.removeListener(\"response\", clearTimer);\n    if (callback) {\n      self.removeListener(\"timeout\", callback);\n    }\n    if (!self.socket) {\n      self._currentRequest.removeListener(\"socket\", startTimer);\n    }\n  }\n\n  // Attach callback if passed\n  if (callback) {\n    this.on(\"timeout\", callback);\n  }\n\n  // Start the timer if or when the socket is opened\n  if (this.socket) {\n    startTimer(this.socket);\n  }\n  else {\n    this._currentRequest.once(\"socket\", startTimer);\n  }\n\n  // Clean up on events\n  this.on(\"socket\", destroyOnTimeout);\n  this.on(\"abort\", clearTimer);\n  this.on(\"error\", clearTimer);\n  this.on(\"response\", clearTimer);\n\n  return this;\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\n  // Ensure headers are always present\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n};\n\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    this.emit(\"error\", new TypeError(\"Unsupported protocol \" + protocol));\n    return;\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.substr(0, protocol.length - 1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  this._currentUrl = url.format(this._options);\n\n  // Set up event handlers\n  request._redirectable = this;\n  for (var e = 0; e < events.length; e++) {\n    request.on(events[e], eventHandlers[events[e]]);\n  }\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end.\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      /* istanbul ignore else */\n      if (request === self._currentRequest) {\n        // Report any write errors\n        /* istanbul ignore if */\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          /* istanbul ignore else */\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  var statusCode = response.statusCode;\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n  var location = response.headers.location;\n  if (location && this._options.followRedirects !== false &&\n      statusCode >= 300 && statusCode < 400) {\n    // Abort the current request\n    abortRequest(this._currentRequest);\n    // Discard the remainder of the response to avoid waiting for data\n    response.destroy();\n\n    // RFC7231§6.4: A client SHOULD detect and intervene\n    // in cyclical redirections (i.e., \"infinite\" redirection loops).\n    if (++this._redirectCount > this._options.maxRedirects) {\n      this.emit(\"error\", new TooManyRedirectsError());\n      return;\n    }\n\n    // RFC7231§6.4: Automatic redirection needs to done with\n    // care for methods not known to be safe, […]\n    // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change\n    // the request method from POST to GET for the subsequent request.\n    if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n        // RFC7231§6.4.4: The 303 (See Other) status code indicates that\n        // the server is redirecting the user agent to a different resource […]\n        // A user agent can perform a retrieval request targeting that URI\n        // (a GET or HEAD request if using HTTP) […]\n        (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n      this._options.method = \"GET\";\n      // Drop a possible entity and headers related to it\n      this._requestBodyBuffers = [];\n      removeMatchingHeaders(/^content-/i, this._options.headers);\n    }\n\n    // Drop the Host header, as the redirect might lead to a different host\n    var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);\n\n    // If the redirect is relative, carry over the host of the last request\n    var currentUrlParts = url.parse(this._currentUrl);\n    var currentHost = currentHostHeader || currentUrlParts.host;\n    var currentUrl = /^\\w+:/.test(location) ? this._currentUrl :\n      url.format(Object.assign(currentUrlParts, { host: currentHost }));\n\n    // Determine the URL of the redirection\n    var redirectUrl;\n    try {\n      redirectUrl = url.resolve(currentUrl, location);\n    }\n    catch (cause) {\n      this.emit(\"error\", new RedirectionError(cause));\n      return;\n    }\n\n    // Create the redirected request\n    debug(\"redirecting to\", redirectUrl);\n    this._isRedirect = true;\n    var redirectUrlParts = url.parse(redirectUrl);\n    Object.assign(this._options, redirectUrlParts);\n\n    // Drop the Authorization header if redirecting to another domain\n    if (!(redirectUrlParts.host === currentHost || isSubdomainOf(redirectUrlParts.host, currentHost))) {\n      removeMatchingHeaders(/^authorization$/i, this._options.headers);\n    }\n\n    // Evaluate the beforeRedirect callback\n    if (typeof this._options.beforeRedirect === \"function\") {\n      var responseDetails = { headers: response.headers };\n      try {\n        this._options.beforeRedirect.call(null, this._options, responseDetails);\n      }\n      catch (err) {\n        this.emit(\"error\", err);\n        return;\n      }\n      this._sanitizeOptions(this._options);\n    }\n\n    // Perform the redirected request\n    try {\n      this._performRequest();\n    }\n    catch (cause) {\n      this.emit(\"error\", new RedirectionError(cause));\n    }\n  }\n  else {\n    // The response is not a redirect; return it as-is\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    function request(input, options, callback) {\n      // Parse parameters\n      if (typeof input === \"string\") {\n        var urlStr = input;\n        try {\n          input = urlToOptions(new URL(urlStr));\n        }\n        catch (err) {\n          /* istanbul ignore next */\n          input = url.parse(urlStr);\n        }\n      }\n      else if (URL && (input instanceof URL)) {\n        input = urlToOptions(input);\n      }\n      else {\n        callback = options;\n        options = input;\n        input = { protocol: protocol };\n      }\n      if (typeof options === \"function\") {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    }\n\n    // Executes a GET request, following redirects\n    function get(input, options, callback) {\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\n      wrappedRequest.end();\n      return wrappedRequest;\n    }\n\n    // Expose the properties on the wrapped protocol\n    Object.defineProperties(wrappedProtocol, {\n      request: { value: request, configurable: true, enumerable: true, writable: true },\n      get: { value: get, configurable: true, enumerable: true, writable: true },\n    });\n  });\n  return exports;\n}\n\n/* istanbul ignore next */\nfunction noop() { /* empty */ }\n\n// from https://github.com/nodejs/node/blob/master/lib/internal/url.js\nfunction urlToOptions(urlObject) {\n  var options = {\n    protocol: urlObject.protocol,\n    hostname: urlObject.hostname.startsWith(\"[\") ?\n      /* istanbul ignore next */\n      urlObject.hostname.slice(1, -1) :\n      urlObject.hostname,\n    hash: urlObject.hash,\n    search: urlObject.search,\n    pathname: urlObject.pathname,\n    path: urlObject.pathname + urlObject.search,\n    href: urlObject.href,\n  };\n  if (urlObject.port !== \"\") {\n    options.port = Number(urlObject.port);\n  }\n  return options;\n}\n\nfunction removeMatchingHeaders(regex, headers) {\n  var lastValue;\n  for (var header in headers) {\n    if (regex.test(header)) {\n      lastValue = headers[header];\n      delete headers[header];\n    }\n  }\n  return (lastValue === null || typeof lastValue === \"undefined\") ?\n    undefined : String(lastValue).trim();\n}\n\nfunction createErrorType(code, defaultMessage) {\n  function CustomError(cause) {\n    Error.captureStackTrace(this, this.constructor);\n    if (!cause) {\n      this.message = defaultMessage;\n    }\n    else {\n      this.message = defaultMessage + \": \" + cause.message;\n      this.cause = cause;\n    }\n  }\n  CustomError.prototype = new Error();\n  CustomError.prototype.constructor = CustomError;\n  CustomError.prototype.name = \"Error [\" + code + \"]\";\n  CustomError.prototype.code = code;\n  return CustomError;\n}\n\nfunction abortRequest(request) {\n  for (var e = 0; e < events.length; e++) {\n    request.removeListener(events[e], eventHandlers[events[e]]);\n  }\n  request.on(\"error\", noop);\n  request.abort();\n}\n\nfunction isSubdomainOf(subdomain, domain) {\n  const dot = subdomain.length - domain.length - 1;\n  return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n"]}